package com.build.stats.utils

import org.springframework.data.jpa.repository.JpaRepository
import org.springframework.data.repository.findByIdOrNull
import java.time.LocalDateTime


/**
 * Returns this value or value generated by [defaultValueProvider] if this is null.
 */
inline fun <T> T?.orElse(defaultValueProvider: () -> T): T {
    return this ?: defaultValueProvider()
}

/**
 * Returns this or throw exception if this is null. [messageProvider]
 * can be used for specific exception message.
 */
fun <T> T?.retrieveRequired(messageProvider: (() -> String)? = null): T {
    return this ?: throw IllegalStateException(
        messageProvider?.invoke() ?: DEFAULT_ENTITY_IS_ABSENT_MSG
    )
}

private const val DEFAULT_ENTITY_IS_ABSENT_MSG = "Entity is marked as required, but null"